#import '../fragments/product.graphql'
#import '../fragments/item.graphql'
#import '../fragments/seller.graphql'
#import '../fragments/commertialOffer.graphql'
#import '../fragments/installment.graphql'

query productSearchV3(
  $query: String
  $fullText: String
  $selectedFacets: [SelectedFacetInput]
  $orderBy: String
  $from: Int
  $to: Int
  $hideUnavailableItems: Boolean = false
  $skusFilter: ItemsFilter = ALL_AVAILABLE
  $simulationBehavior: SimulationBehavior = default
  $installmentCriteria: InstallmentsCriteria = MAX_WITHOUT_INTEREST
  $productOriginVtex: Boolean = false
  $fuzzy: String
  $operator: Operator
  $searchState: String
  $excludedPaymentSystems: [String]
  $includedPaymentSystems: [String]
  $variant: String
) {
  productSearch(
    query: $query
    fullText: $fullText
    selectedFacets: $selectedFacets
    orderBy: $orderBy
    from: $from
    to: $to
    hideUnavailableItems: $hideUnavailableItems
    simulationBehavior: $simulationBehavior
    productOriginVtex: $productOriginVtex
    fuzzy: $fuzzy
    operator: $operator
    searchState: $searchState
    variant: $variant
  ) @context(provider: "vtex.search-graphql") {
    products {
      ...ProductFragment
      items(filter: $skusFilter) {
        ...ItemFragment
        sellers {
          ...SellerFragment
          commertialOffer {
            ...CommertialOfferFragment
            Installments(
              criteria: $installmentCriteria
              excludedPaymentSystems: $excludedPaymentSystems
              includedPaymentSystems: $includedPaymentSystems
            ) {
              ...InstallmentFragment
            }
          }
        }
      }
      selectedProperties {
        key
        value
      }
      rule {
        id
      }
    }
    recordsFiltered
    correction {
      misspelled
    }
    breadcrumb {
      name
      href
    }
    fuzzy
    operator
    searchState
    redirect
  }
}
